type Basket @model @auth(rules: [{ allow: public }]) {
  id: ID!
  BasketServices: [BasketService]
    @hasMany(indexName: "byBasket", fields: ["id"])
  salonID: ID! @index(name: "bySalon")
  serviceID: ID! @index(name: "byService")
  userID: ID! @index(name: "byUser")
}

enum AppointmentStatus {
  PASSED
  UPCOMING
}

type ServiceAppointment @model @auth(rules: [{ allow: public }]) {
  id: ID!
  quantity: Int!
  date: String!
  Service: Service @hasOne
  appointmentID: ID! @index(name: "byAppointment")
}

type Appointment @model @auth(rules: [{ allow: public }]) {
  id: ID!
  userID: ID! @index(name: "byUser")
  Salon: Salon @hasOne
  total: Int!
  date: String!
  status: AppointmentStatus!
  ServiceAppointments: [ServiceAppointment]
    @hasMany(indexName: "byAppointment", fields: ["id"])
}

type BasketService @model @auth(rules: [{ allow: public }]) {
  id: ID!
  quantity: Int!
  Service: ServiceAppointment @hasOne
  basketID: ID! @index(name: "byBasket")
}

type User @model @auth(rules: [{ allow: public }]) {
  id: ID!
  name: String!
  address: String!
  lat: Float!
  lng: Float!
  Appointments: [Appointment] @hasMany(indexName: "byUser", fields: ["id"])
  Baskets: [Basket] @hasMany(indexName: "byUser", fields: ["id"])
  sub: String!
}

type Service @model @auth(rules: [{ allow: public }]) {
  id: ID!
  name: String!
  label: String!
  description: String
  price: Int!
  image: String
  salonID: ID! @index(name: "bySalon")
  Baskets: [Basket] @hasMany(indexName: "byService", fields: ["id"])
}

type Salon @model @auth(rules: [{ allow: public }]) {
  id: ID!
  name: String!
  image: String!
  gender: String!
  phone_number: Int!
  rating: Float
  lat: Float!
  lng: Float!
  Services: [Service] @hasMany(indexName: "bySalon", fields: ["id"])
  address: String!
}
